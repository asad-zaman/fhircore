"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[732],{285:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>g});var r=i(4848),t=i(8453);const o={sidebar_label:"Tooling"},a="Tooling",s={id:"engineering/app/configuring/writing-fhir/tooling/readme",title:"Tooling",description:"fhir-tooling simplifies FHIR data management by converting, validating, extracting, uploading, and cleaning resources.",source:"@site/docs/engineering/app/configuring/writing-fhir/tooling/readme.mdx",sourceDirName:"engineering/app/configuring/writing-fhir/tooling",slug:"/engineering/app/configuring/writing-fhir/tooling/",permalink:"/engineering/app/configuring/writing-fhir/tooling/",draft:!1,unlisted:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/engineering/app/configuring/writing-fhir/tooling/readme.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Tooling"},sidebar:"defaultSidebar",previous:{title:"Testing FHIR Resources",permalink:"/engineering/app/configuring/writing-fhir/testing-resources"},next:{title:"Storing Preferences",permalink:"/engineering/app/datastore/"}},c={},g=[];function l(n){const e={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"tooling",children:"Tooling"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"https://github.com/onaio/fhir-tooling",children:"fhir-tooling"})," simplifies FHIR data management by converting, validating, extracting, uploading, and cleaning resources."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"https://github.com/onaio/fhir-tooling/tree/main/cleaner",children:(0,r.jsx)(e.strong,{children:"cleaner"})})," - it efficiently removes specific FHIR resources from a FHIR API based on user-defined filtering criteria, streamlining data maintenance."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"https://github.com/onaio/fhir-tooling/tree/main/efsity",children:(0,r.jsx)(e.strong,{children:"efsity"})})," - efsity streamlines authoring and managing FHIRCore app configurations and content through command-line conversions, validations, translations, and publishing."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"https://github.com/onaio/fhir-tooling/tree/main/importer",children:(0,r.jsx)(e.strong,{children:"importer"})})," - The importer script streamlines the management of FHIR resources and Keycloak roles through CSV-based bulk operations, covering creation, assignment, updates, and even deletion of duplicates."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"https://github.com/onaio/fhir-tooling/tree/main/uploader",children:(0,r.jsx)(e.strong,{children:"uploader"})})," - The uploader script automates content uploads to a FHIR server, simplifying the process through command-line execution and configuration."]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>s});var r=i(6540);const t={},o=r.createContext(t);function a(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);